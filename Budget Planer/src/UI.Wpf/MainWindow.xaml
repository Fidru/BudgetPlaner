<Window x:Class="UI.Wpf.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:wpf="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:converters="clr-namespace:MaterialDesignThemes.Wpf.Converters;assembly=MaterialDesignThemes.Wpf"
        xmlns:TreeHelpers="clr-namespace:UI.Wpf.TreeHelpers"
        Background="{DynamicResource MaterialDesignPaper}"
        TextElement.Foreground="{DynamicResource PrimaryHueMidBrush}"
        DataContext="{Binding RelativeSource={RelativeSource Self}}"
        mc:Ignorable="d"
        Title="MainWindow" Width="1768" Height="992"
        WindowStartupLocation="CenterScreen" WindowState="Maximized">
    <Window.Resources>
        <Style x:Key="MaterialDesignActionRadioButton" TargetType="{x:Type RadioButton}">
            <Style.Resources>
                <Style TargetType="wpf:PackIcon">
                    <Setter Property="Width" Value="20" />
                    <Setter Property="Height" Value="20" />
                </Style>
            </Style.Resources>
            <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidForegroundBrush}" />
            <Setter Property="Background" Value="{DynamicResource PrimaryHueMidBrush}" />
            <Setter Property="Width" Value="32" />
            <Setter Property="Height" Value="32" />
            <Setter Property="FontSize" Value="18" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="wpf:ShadowAssist.ShadowDepth" Value="Depth0" />
            <Setter Property="wpf:ToggleButtonAssist.OnContent" Value="{StaticResource CheckMarkIcon}" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Grid Effect="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(wpf:ShadowAssist.ShadowDepth), Converter={x:Static converters:ShadowConverter.Instance}}">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="0.23" Storyboard.TargetProperty="(UIElement.Opacity)" />
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="CheckStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition From="*" To="Checked">
                                            <Storyboard FillBehavior="HoldEnd">
                                                <DoubleAnimationUsingKeyFrames Duration="0:0:0.2" Storyboard.TargetProperty="ScaleX" Storyboard.TargetName="OffScaleTransform">
                                                    <LinearDoubleKeyFrame Value="1" KeyTime="0:0:0.0" />
                                                    <LinearDoubleKeyFrame Value="0" KeyTime="0:0:0.1" />
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Duration="0:0:0.2" Storyboard.TargetProperty="ScaleX" Storyboard.TargetName="OnScaleTransform">
                                                    <LinearDoubleKeyFrame Value="0" KeyTime="0:0:0.1" />
                                                    <LinearDoubleKeyFrame Value="1" KeyTime="0:0:0.2" />
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualTransition>
                                        <VisualTransition From="Checked" To="Unchecked">
                                            <Storyboard FillBehavior="HoldEnd">
                                                <DoubleAnimationUsingKeyFrames Duration="0:0:0.2" Storyboard.TargetProperty="ScaleX" Storyboard.TargetName="OnScaleTransform">
                                                    <LinearDoubleKeyFrame Value="1" KeyTime="0:0:0.0" />
                                                    <LinearDoubleKeyFrame Value="0" KeyTime="0:0:0.1" />
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Duration="0:0:0.2" Storyboard.TargetProperty="ScaleX" Storyboard.TargetName="OffScaleTransform">
                                                    <LinearDoubleKeyFrame Value="0" KeyTime="0:0:0.1" />
                                                    <LinearDoubleKeyFrame Value="1" KeyTime="0:0:0.2" />
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualTransition>
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" Storyboard.TargetProperty="ScaleX" Storyboard.TargetName="OffScaleTransform"
                                                         To="0" />
                                            <DoubleAnimation Duration="0" Storyboard.TargetProperty="ScaleX" Storyboard.TargetName="OnScaleTransform"
                                                         To="1" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unchecked">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" Storyboard.TargetProperty="ScaleX" Storyboard.TargetName="OffScaleTransform"
                                                         To="1" />
                                            <DoubleAnimation Duration="0" Storyboard.TargetProperty="ScaleX" Storyboard.TargetName="OnScaleTransform"
                                                         To="0" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Indeterminate">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="IndeterminateCheck" />
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid x:Name="OffGrid" RenderTransformOrigin=".5,.5" Background="{TemplateBinding Background}">
                                <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              FlowDirection="LeftToRight" />
                                <Grid.Clip>
                                    <EllipseGeometry RadiusX="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Width, Converter={StaticResource DivisionMathConverter}, ConverterParameter=2.0}"
                                                 RadiusY="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Height, Converter={StaticResource DivisionMathConverter}, ConverterParameter=2.0}">
                                        <EllipseGeometry.Center>
                                            <MultiBinding Converter="{StaticResource PointValueConverter}">
                                                <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="Width" Converter="{StaticResource DivisionMathConverter}" ConverterParameter="2.0" />
                                                <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="Height" Converter="{StaticResource DivisionMathConverter}" ConverterParameter="2.0" />
                                            </MultiBinding>
                                        </EllipseGeometry.Center>
                                    </EllipseGeometry>
                                </Grid.Clip>
                                <Grid.RenderTransform>
                                    <ScaleTransform x:Name="OffScaleTransform" ScaleX="1" ScaleY="1" />
                                </Grid.RenderTransform>
                            </Grid>
                            <Grid x:Name="OnGrid" RenderTransformOrigin=".5,.5" Background="{TemplateBinding Background}">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              FlowDirection="LeftToRight"
                                              Content="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(wpf:ToggleButtonAssist.OnContent)}"
                                              ContentTemplate="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(wpf:ToggleButtonAssist.OnContentTemplate)}" />
                                <Grid.Clip>
                                    <EllipseGeometry RadiusX="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Width, Converter={StaticResource DivisionMathConverter}, ConverterParameter=2.0}"
                                                 RadiusY="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Height, Converter={StaticResource DivisionMathConverter}, ConverterParameter=2.0}">
                                        <EllipseGeometry.Center>
                                            <MultiBinding Converter="{StaticResource PointValueConverter}">
                                                <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="Width" Converter="{StaticResource DivisionMathConverter}" ConverterParameter="2.0" />
                                                <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="Height" Converter="{StaticResource DivisionMathConverter}" ConverterParameter="2.0" />
                                            </MultiBinding>
                                        </EllipseGeometry.Center>
                                    </EllipseGeometry>
                                </Grid.Clip>
                                <Grid.RenderTransform>
                                    <ScaleTransform x:Name="OnScaleTransform" ScaleX="0" ScaleY="1" />
                                </Grid.RenderTransform>
                            </Grid>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="SquareButton" TargetType="ButtonBase" BasedOn="{StaticResource MaterialDesignRaisedButton}">
            <Setter Property="TreeHelpers:TreeHelpers.Modifiers">
                <Setter.Value>
                    <TreeHelpers:ModifierCollection>
                        <TreeHelpers:Modifier TemplatePartName="border" Property="{x:Static Border.CornerRadiusProperty}">
                            <TreeHelpers:Modifier.Value>
                                <CornerRadius>0</CornerRadius>
                            </TreeHelpers:Modifier.Value>
                        </TreeHelpers:Modifier>
                    </TreeHelpers:ModifierCollection>
                </Setter.Value>
            </Setter>
            <Setter Property="Margin" Value="10,0,10,0" />
        </Style>
        <Style x:Key="CustomHeaderStyle" TargetType="GridViewColumnHeader" BasedOn="{StaticResource {x:Type GridViewColumnHeader}}">
            <!-- This is currently broken is v2.5.1; and does not work -->
            <!--<Setter Property="HorizontalAlignment" Value="Left" />-->
            <!-- This works, but will will only change the color for the displayed columns and not the entire header area -->

            <Setter Property="TreeHelpers:TreeHelpers.Modifiers">
                <Setter.Value>
                    <TreeHelpers:ModifierCollection>
                        <TreeHelpers:Modifier TemplatePartName="HeaderBorder" Property="{x:Static Border.BackgroundProperty}">
                            <TreeHelpers:Modifier.Value>
                                <SolidColorBrush>
                                    <SolidColorBrush.Color>
                                        <Color></Color>
                                        <!--<Color A="255" R="3" G="169" B="244"></Color>-->
                                    </SolidColorBrush.Color>
                                </SolidColorBrush>
                            </TreeHelpers:Modifier.Value>
                        </TreeHelpers:Modifier>
                    </TreeHelpers:ModifierCollection>
                </Setter.Value>
            </Setter>

            <!-- Header text color -->
            <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidBrush}" />
        </Style>

        <Style x:Key="MyListViewScrollStyle" TargetType="{x:Type ScrollViewer}" BasedOn="{StaticResource {x:Static GridView.GridViewScrollViewerStyleKey}}">
            <Setter Property="Margin" Value="10,0,10,0" />
            <!--This will change the color of the entire list view. If you set this you probably want to set a specific ListViewItem style like below-->
            <!--<Setter Property="Background" Value="{DynamicResource MaterialDesignDarkBackground}" />-->
        </Style>

        <Style x:Key="ItemStyle" TargetType="ListViewItem" BasedOn="{StaticResource MaterialDesignGridViewItem}">
            <Style.Resources>
                <!-- Item Selection color -->
                <SolidColorBrush x:Key="MaterialDesignSelection" Color="DodgerBlue" />
                <!-- Mouse over color and separator color, (GridLines) -->
                <!--<SolidColorBrush x:Key="MaterialDesignDivider" Color="{DynamicResource MaterialDesignShadow}" />-->
            </Style.Resources>
            <!--<Setter Property="Background" Value="{DynamicResource MaterialDesignDarkBackground}" />
            <Setter Property="Foreground" Value="{DynamicResource MaterialDesignLightBackground}" />-->

            <Style.Triggers>
                <!-- Overriding colors by duplicating triggers from the base style-->
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{DynamicResource PrimaryHueMidBrush}" />
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsSelected" Value="True" />
                        <Condition Property="Selector.IsSelectionActive" Value="False" />
                    </MultiTrigger.Conditions>
                    <Setter Property="Background" Value="{DynamicResource PrimaryHueMidBrush}" />
                </MultiTrigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <!--Enable for FullScreen !-->
    <!-- WindowStyle="None" ResizeMode="NoResize"!-->
    <materialDesign:DrawerHost IsLeftDrawerOpen="{Binding ElementName=MenuToggleButton, Path=IsChecked}">
        <materialDesign:DrawerHost.LeftDrawerContent>
            <DockPanel MinWidth="212">
                <ToggleButton Style="{StaticResource MaterialDesignHamburgerToggleButton}"
                              DockPanel.Dock="Top" HorizontalAlignment="Right" Margin="16"
                              IsChecked="{Binding ElementName=MenuToggleButton, Path=IsChecked, Mode=TwoWay}" />
                <Menu x:Name="mainMenu">
                    <Menu.Resources>
                        <Style TargetType="MenuItem" BasedOn="{StaticResource {x:Type MenuItem}}">
                            <Setter Property="TreeHelpers:TreeHelpers.Modifiers">
                                <Setter.Value>
                                    <TreeHelpers:ModifierCollection>
                                        <TreeHelpers:Modifier Property="{x:Static Popup.PlacementProperty}"
                                                            Value="{x:Static PlacementMode.Right}"
                                                            TemplatePartName="PART_Popup" />
                                    </TreeHelpers:ModifierCollection>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Menu.Resources>
                    <Menu.ItemsPanel>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel />
                        </ItemsPanelTemplate>
                    </Menu.ItemsPanel>

                    <MenuItem Name="save" Header="Save" Click="save_Click" />
                    <MenuItem Name="load" Header="Load" Click="load_Click" />
                </Menu>
            </DockPanel>
        </materialDesign:DrawerHost.LeftDrawerContent>

        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="21*" />
                <ColumnDefinition Width="21*" />
                <ColumnDefinition Width="21*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="55" />
                <RowDefinition Height="50*" />
                <RowDefinition Height="50*" />
            </Grid.RowDefinitions>

            <materialDesign:ColorZone Padding="16" materialDesign:ShadowAssist.ShadowDepth="Depth2"
                                      Mode="PrimaryMid" Grid.ColumnSpan="3" Margin="10,0,10,0">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="6" />
                        <ColumnDefinition Width="95" />
                        <ColumnDefinition Width="200" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="111*" />
                        <ColumnDefinition Width="1316*" />
                    </Grid.ColumnDefinitions>
                    <ToggleButton Style="{StaticResource MaterialDesignHamburgerToggleButton}" IsChecked="False"
                                  x:Name="MenuToggleButton" Grid.Column="1" Grid.Row="0" Margin="21,0,37,0" />
                </Grid>
            </materialDesign:ColorZone>

            <Button x:Name="prev" Content="Previous" VerticalAlignment="Center" HorizontalAlignment="Left"
                Style="{StaticResource SquareButton}" Grid.Column="0" Grid.Row="1" Height="50" Width="120" Click="prev_Click" />

            <TextBlock x:Name="monthDisplay" Text="Month"  VerticalAlignment="Center" HorizontalAlignment="Center"
                Style="{StaticResource MaterialDesignHeadline2TextBlock}" Grid.Column="1" Grid.Row="1" TextWrapping="Wrap" />

            <Button x:Name="next" Content="Next" VerticalAlignment="Center" HorizontalAlignment="Right"
                Style="{StaticResource SquareButton}" Grid.Column="3" Grid.Row="1" Height="50" Width="120" Click="next_Click" />

            <ListView x:Name="bills" ItemsSource="{Binding CurrentMonth.Bills}"
                      ItemContainerStyle="{StaticResource ItemStyle}" Grid.Row="2" Grid.Column="0" Margin="0,0,0,0" Grid.RowSpan="2">
                <ListView.Resources>
                    <Style x:Key="{x:Static GridView.GridViewScrollViewerStyleKey}" TargetType="{x:Type ScrollViewer}" BasedOn="{StaticResource MyListViewScrollStyle}" />
                </ListView.Resources>
                <ListView.View>
                    <GridView>
                        <GridViewColumn Header="Name" DisplayMemberBinding="{Binding Name}" HeaderContainerStyle="{StaticResource CustomHeaderStyle}" Width="350" />
                        <GridViewColumn Header="Payed" HeaderContainerStyle="{StaticResource CustomHeaderStyle}" Width="125">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <RadioButton x:Name="radioPaid" IsChecked="{Binding Payed}"
                                                 Style="{StaticResource MaterialDesignActionRadioButton}" Click="radioPaid_Click">
                                        <wpf:PackIcon />
                                    </RadioButton>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn Header="Amount" HeaderContainerStyle="{StaticResource CustomHeaderStyle}">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBox x:Name="textAmount" Text="{Binding Amount}" TextAlignment="Right" HorizontalAlignment="Right" KeyDown="textAmount_KeyDown" />
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                    </GridView>
                </ListView.View>

                <ListView.GroupStyle>
                    <GroupStyle>
                        <GroupStyle.HeaderTemplate>
                            <DataTemplate>
                                <TextBlock FontWeight="Bold" FontSize="14" Text="{Binding CategoryName}" />
                            </DataTemplate>
                        </GroupStyle.HeaderTemplate>
                    </GroupStyle>
                </ListView.GroupStyle>
            </ListView>
            <ListView x:Name="foodBills" ItemsSource="{Binding CurrentMonth.FoodPayments}"
                      ItemContainerStyle="{StaticResource ItemStyle}" Grid.Row="2" Grid.Column="1" Grid.RowSpan="2">
                <ListView.Resources>
                    <Style x:Key="{x:Static GridView.GridViewScrollViewerStyleKey}" TargetType="{x:Type ScrollViewer}" BasedOn="{StaticResource MyListViewScrollStyle}" />
                </ListView.Resources>
                <ListView.View>
                    <GridView>
                        <GridViewColumn Header="Name" DisplayMemberBinding="{Binding Name}" HeaderContainerStyle="{StaticResource CustomHeaderStyle}" Width="350" />
                        <GridViewColumn Header="Payed" HeaderContainerStyle="{StaticResource CustomHeaderStyle}" Width="125">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <RadioButton x:Name="radioPaid" IsChecked="{Binding Payed}"  Style="{StaticResource MaterialDesignActionRadioButton}" Click="radioPaid_Click">
                                        <wpf:PackIcon />
                                    </RadioButton>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn Header="Amount" HeaderContainerStyle="{StaticResource CustomHeaderStyle}">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBox x:Name="textAmount" Text="{Binding Amount}" TextAlignment="Right" KeyDown="textAmount_KeyDown" />
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                    </GridView>
                </ListView.View>

                <ListView.GroupStyle>
                    <GroupStyle>
                        <GroupStyle.HeaderTemplate>
                            <DataTemplate>
                                <TextBlock FontWeight="Bold" FontSize="14" Text="{Binding CategoryName}" />
                            </DataTemplate>
                        </GroupStyle.HeaderTemplate>
                    </GroupStyle>
                </ListView.GroupStyle>
            </ListView>
            <ListView x:Name="creditCard" ItemsSource="{Binding CurrentMonth.CreditCardPayments}"
                      ItemContainerStyle="{StaticResource ItemStyle}" Grid.Row="2" Grid.Column="3" Grid.RowSpan="1">
                <ListView.Resources>
                    <Style x:Key="{x:Static GridView.GridViewScrollViewerStyleKey}" TargetType="{x:Type ScrollViewer}" BasedOn="{StaticResource MyListViewScrollStyle}" />
                </ListView.Resources>
                <ListView.View>
                    <GridView>
                        <GridViewColumn Header="Name" DisplayMemberBinding="{Binding Name}" HeaderContainerStyle="{StaticResource CustomHeaderStyle}" Width="350" />
                        <GridViewColumn Header="Payed" HeaderContainerStyle="{StaticResource CustomHeaderStyle}" Width="125">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <RadioButton x:Name="radioPaid" IsChecked="{Binding Payed}"  Style="{StaticResource MaterialDesignActionRadioButton}" Click="radioPaid_Click">
                                        <wpf:PackIcon />
                                    </RadioButton>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn Header="Amount" HeaderContainerStyle="{StaticResource CustomHeaderStyle}">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBox Text="{Binding Amount}" TextAlignment="Right" KeyDown="textAmount_KeyDown" />
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                    </GridView>
                </ListView.View>

                <ListView.GroupStyle>
                    <GroupStyle>
                        <GroupStyle.HeaderTemplate>
                            <DataTemplate>
                                <TextBlock FontWeight="Bold" FontSize="14" Text="{Binding CategoryName}" />
                            </DataTemplate>
                        </GroupStyle.HeaderTemplate>
                    </GroupStyle>
                </ListView.GroupStyle>
            </ListView>
            <ListView x:Name="expectedBills" ItemsSource="{Binding CurrentMonth.ExpectedUnexpectedPayments}"
                      ItemContainerStyle="{StaticResource ItemStyle}" Grid.Row="4" Grid.Column="3" Grid.RowSpan="1">
                <ListView.Resources>
                    <Style x:Key="{x:Static GridView.GridViewScrollViewerStyleKey}" TargetType="{x:Type ScrollViewer}" BasedOn="{StaticResource MyListViewScrollStyle}" />
                </ListView.Resources>
                <ListView.View>
                    <GridView>
                        <GridViewColumn Header="Name" DisplayMemberBinding="{Binding Name}" HeaderContainerStyle="{StaticResource CustomHeaderStyle}" Width="350" />
                        <GridViewColumn Header="Payed" HeaderContainerStyle="{StaticResource CustomHeaderStyle}" Width="125">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <RadioButton x:Name="radioPaid" IsChecked="{Binding Payed}"  Style="{StaticResource MaterialDesignActionRadioButton}" Click="radioPaid_Click">
                                        <wpf:PackIcon />
                                    </RadioButton>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn Header="Amount" HeaderContainerStyle="{StaticResource CustomHeaderStyle}">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBox x:Name="textAmount" Text="{Binding Amount}" TextAlignment="Right" KeyDown="textAmount_KeyDown" />
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                    </GridView>
                </ListView.View>

                <ListView.GroupStyle>
                    <GroupStyle>
                        <GroupStyle.HeaderTemplate>
                            <DataTemplate>
                                <TextBlock FontWeight="Bold" FontSize="14" Text="{Binding CategoryName}" />
                            </DataTemplate>
                        </GroupStyle.HeaderTemplate>
                    </GroupStyle>
                </ListView.GroupStyle>
            </ListView>
        </Grid>
    </materialDesign:DrawerHost>
</Window>