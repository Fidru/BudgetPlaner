<Window x:Class="UI.Wpf.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:TreeHelpers="clr-namespace:UI.Wpf.TreeHelpers"
        Background="{DynamicResource MaterialDesignPaper}"
        TextElement.Foreground="{DynamicResource PrimaryHueMidBrush}"
        DataContext="{Binding RelativeSource={RelativeSource Self}}"
        mc:Ignorable="d"
        Title="MainWindow" Width="1768" Height="992"
        WindowStartupLocation="CenterScreen" WindowState="Maximized">
    <Window.Resources>
        <Style x:Key="SquareButton" TargetType="ButtonBase" BasedOn="{StaticResource MaterialDesignRaisedButton}">
            <Setter Property="TreeHelpers:TreeHelpers.Modifiers">
                <Setter.Value>
                    <TreeHelpers:ModifierCollection>
                        <TreeHelpers:Modifier TemplatePartName="border" Property="{x:Static Border.CornerRadiusProperty}">
                            <TreeHelpers:Modifier.Value>
                                <CornerRadius>0</CornerRadius>
                            </TreeHelpers:Modifier.Value>
                        </TreeHelpers:Modifier>
                    </TreeHelpers:ModifierCollection>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="CustomHeaderStyle" TargetType="GridViewColumnHeader" BasedOn="{StaticResource {x:Type GridViewColumnHeader}}">
            <!-- This is currently broken is v2.5.1; and does not work -->
            <Setter Property="Background" Value="{DynamicResource PrimaryHueMidBrush}" />

            <!-- This works, but will will only change the color for the displayed columns and not the entire header area -->
            <Setter Property="TreeHelpers:TreeHelpers.Modifiers">
                <Setter.Value>
                    <TreeHelpers:ModifierCollection>
                        <TreeHelpers:Modifier TemplatePartName="HeaderBorder" Property="{x:Static Border.BackgroundProperty}">
                            <TreeHelpers:Modifier.Value>
                                <SolidColorBrush Color="{DynamicResource MaterialDesignShadow}" />
                            </TreeHelpers:Modifier.Value>
                        </TreeHelpers:Modifier>
                    </TreeHelpers:ModifierCollection>
                </Setter.Value>
            </Setter>

            <!-- Header text color -->
            <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidBrush}" />

            <!--<Style.Resources>
                -->
            <!-- Mouse over color -->
            <!--
                <SolidColorBrush x:Key="MaterialDesignBody" />
            </Style.Resources>-->
        </Style>

        <Style x:Key="MyListViewScrollStyle" TargetType="{x:Type ScrollViewer}" BasedOn="{StaticResource {x:Static GridView.GridViewScrollViewerStyleKey}}">
            <!--This will change the color of the entire list view. If you set this you probably want to set a specific ListViewItem style like below-->
            <Setter Property="Background" Value="{DynamicResource PrimaryHueMidBrush}" />
        </Style>

        <Style x:Key="ItemStyle" TargetType="ListViewItem" BasedOn="{StaticResource MaterialDesignGridViewItem}">
            <Style.Resources>
                <!-- Item Selection color -->
                <SolidColorBrush x:Key="MaterialDesignSelection" Color="DodgerBlue" />
                <!-- Mouse over color and separator color -->
                <SolidColorBrush x:Key="MaterialDesignDivider" Color="{DynamicResource MaterialDesignShadow}" />
            </Style.Resources>
            <Setter Property="Background" Value="Gray" />

            <Style.Triggers>
                <!-- Overriding colors by duplicating triggers from the base style-->
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{DynamicResource PrimaryHueMidBrush}" />
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsSelected" Value="True" />
                        <Condition Property="Selector.IsSelectionActive" Value="False" />
                    </MultiTrigger.Conditions>
                    <Setter Property="Background" Value="{DynamicResource PrimaryHueMidBrush}" />
                </MultiTrigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <!--Enable for FullScreen !-->
    <!-- WindowStyle="None" ResizeMode="NoResize"!-->
    <materialDesign:DrawerHost IsLeftDrawerOpen="{Binding ElementName=MenuToggleButton, Path=IsChecked}">
        <materialDesign:DrawerHost.LeftDrawerContent>
            <DockPanel MinWidth="212">
                <ToggleButton Style="{StaticResource MaterialDesignHamburgerToggleButton}"
                              DockPanel.Dock="Top"
                              HorizontalAlignment="Right" Margin="16"
                              IsChecked="{Binding ElementName=MenuToggleButton, Path=IsChecked, Mode=TwoWay}" />
                <Menu x:Name="mainMenu">
                    <Menu.Resources>
                        <Style TargetType="MenuItem" BasedOn="{StaticResource {x:Type MenuItem}}">
                            <Setter Property="TreeHelpers:TreeHelpers.Modifiers">
                                <Setter.Value>
                                    <TreeHelpers:ModifierCollection>
                                        <TreeHelpers:Modifier Property="{x:Static Popup.PlacementProperty}"
                                                            Value="{x:Static PlacementMode.Right}"
                                                            TemplatePartName="PART_Popup" />
                                    </TreeHelpers:ModifierCollection>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Menu.Resources>
                    <Menu.ItemsPanel>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel />
                        </ItemsPanelTemplate>
                    </Menu.ItemsPanel>
                </Menu>
            </DockPanel>
        </materialDesign:DrawerHost.LeftDrawerContent>

        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="21*" />
                <ColumnDefinition Width="21*" />
                <ColumnDefinition Width="21*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="100" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <materialDesign:ColorZone Padding="16" materialDesign:ShadowAssist.ShadowDepth="Depth2"
                                      Mode="PrimaryMid" Grid.ColumnSpan="3">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="6" />
                        <ColumnDefinition Width="95" />
                        <ColumnDefinition Width="200" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="111*" />
                        <ColumnDefinition Width="1316*" />
                    </Grid.ColumnDefinitions>
                    <ToggleButton Style="{StaticResource MaterialDesignHamburgerToggleButton}" IsChecked="False"
                                  x:Name="MenuToggleButton" Grid.Column="1" Grid.Row="0" Margin="28,0,31,0" />
                </Grid>
            </materialDesign:ColorZone>

            <Button x:Name="prev" Content="Previous" VerticalAlignment="Center" HorizontalAlignment="Left"
                Style="{StaticResource SquareButton}" Grid.Column="0" Grid.Row="1" Height="50" Width="120" Click="prev_Click" />

            <TextBlock x:Name="monthDisplay" VerticalAlignment="Center" HorizontalAlignment="Center"
                Style="{StaticResource MaterialDesignHeadline2TextBlock}" Grid.Column="1" Grid.Row="1" TextWrapping="Wrap" Text="Month" />

            <Button x:Name="next" Content="Next" VerticalAlignment="Center" HorizontalAlignment="Right"
                Style="{StaticResource SquareButton}" Grid.Column="3" Grid.Row="1" Height="50" Width="120" Click="next_Click" />

            <ListView x:Name="bills" ItemsSource="{Binding Transactions}" Foreground="{DynamicResource MaterialDesignDarkBackground}" ItemContainerStyle="{StaticResource ItemStyle}" Grid.Row="3" Grid.Column="0">
                <ListView.Resources>
                    <Style x:Key="{x:Static GridView.GridViewScrollViewerStyleKey}" TargetType="{x:Type ScrollViewer}" BasedOn="{StaticResource MyListViewScrollStyle}" />
                </ListView.Resources>
                <ListView.View>
                    <GridView>
                        <GridViewColumn Header="Category" DisplayMemberBinding="{Binding Name}" HeaderContainerStyle="{StaticResource CustomHeaderStyle}" />
                        <GridViewColumn Header="Payed" DisplayMemberBinding="{Binding Payed}" HeaderContainerStyle="{StaticResource CustomHeaderStyle}" />
                        <GridViewColumn Header="Amount" DisplayMemberBinding="{Binding Amount}" HeaderContainerStyle="{StaticResource CustomHeaderStyle}" />
                    </GridView>
                </ListView.View>
            </ListView>
        </Grid>

        <!--</Grid>-->
    </materialDesign:DrawerHost>
</Window>